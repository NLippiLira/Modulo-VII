-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.bootcamps
(
    id serial NOT NULL,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    cue integer NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT bootcamps_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_bootcamp
(
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    bootcamp_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT user_bootcamp_pkey PRIMARY KEY (bootcamp_id, user_id)
);

CREATE TABLE IF NOT EXISTS public.usuarios
(
    id serial NOT NULL,
    "firstName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "lastName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone NOT NULL,
    "updatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT usuarios_pkey PRIMARY KEY (id),
    CONSTRAINT usuarios_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.user_bootcamp
    ADD CONSTRAINT user_bootcamp_bootcamp_id_fkey FOREIGN KEY (bootcamp_id)
    REFERENCES public.bootcamps (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_bootcamp
    ADD CONSTRAINT user_bootcamp_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.usuarios (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;

-- Insertar usuarios de prueba
INSERT INTO public.usuarios ("firstName", "lastName", email, "createdAt", "updatedAt") VALUES
('Mateo', 'Díaz', 'mateo.diaz@correo.com', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Santiago', 'Mejías', 'santiago.mejias@correo.com', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Lucas', 'Rojas', 'lucas.rojas@correo.com', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Facundo', 'Fernández', 'facundo.fernandez@correo.com', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Insertar bootcamps de prueba
INSERT INTO public.bootcamps (title, cue, description, "createdAt", "updatedAt") VALUES
('Introduciendo El Bootcamp De React', 10, 'React es la librería más usada en JavaScript para el desarrollo de interfaces', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Bootcamp Desarrollo Web Full Stack', 12, 'Crearás aplicaciones web utilizando las tecnologías y lenguajes más actuales y populares como JavaScript, nodeJS, Angular, MongoDB, ExpressJS', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
('Bootcamp Big Data, Inteligencia Artificial & Machine Learning', 12, 'Domina Data Science todo el ecosistema de lenguajes y herramientas de Big Data e intégralos con modelos avanzados de Artificial Intelligence y Machine Learning', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Asignar usuarios a bootcamps
INSERT INTO public.user_bootcamp (user_id, bootcamp_id, "createdAt", "updatedAt") VALUES
(1, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(2, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(1, 2, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(1, 3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(2, 3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(3, 3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

-- Consultar todos los usuarios
SELECT * FROM public.usuarios;

-- Consultar todos los bootcamps
SELECT * FROM public.bootcamps;

-- Consultar todos los usuarios con sus bootcamps
SELECT u."firstName", u."lastName", b.title
FROM public.usuarios u
JOIN public.user_bootcamp ub ON u.id = ub.user_id
JOIN public.bootcamps b ON b.id = ub.bootcamp_id;

-- Consultar todos los bootcamps con sus usuarios
SELECT b.title, u."firstName", u."lastName"
FROM public.bootcamps b
JOIN public.user_bootcamp ub ON b.id = ub.bootcamp_id
JOIN public.usuarios u ON u.id = ub.user_id;